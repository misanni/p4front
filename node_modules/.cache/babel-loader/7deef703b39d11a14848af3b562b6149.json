{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/marysanni/Downloads/FullStack_Blog_App_with_React_Redux_and_Django-master/frontend/src/components/Blogs.js\";\nimport React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport { getBlogs, deleteBlogs } from \"../actions/blogs\";\nimport EditBlogs from \"./EditBlogs\";\nimport NewPage from \"./NewPage\";\nexport class Blogs extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      cloneId: 0,\n      cloneTitle: \"\",\n      cloneImageLink: \"\",\n      cloneDescription: \"\",\n      editing: false,\n      hideBlogsDuringUpdate: false,\n      openNewPage: false,\n      MAX_LENGTH: 250 // per blog\n\n    };\n\n    this.newPage = blog => {\n      this.setState({\n        cloneId: blog.id,\n        cloneTitle: blog.title,\n        cloneImageLink: blog.ImageLink,\n        cloneDescription: blog.description,\n        openNewPage: true\n      });\n    };\n\n    this.toggleHideOnUpdate = () => {\n      console.log(\"toggle hide on update\", this.state.hideBlogsDuringUpdate);\n      this.setState({\n        hideBlogsDuringUpdate: !this.state.hideBlogsDuringUpdate\n      });\n    };\n\n    this.handleEdits = blog => {\n      this.setState({\n        cloneId: blog.id,\n        cloneTitle: blog.title,\n        cloneImageLink: blog.ImageLink,\n        cloneDescription: blog.description,\n        editing: !this.state.editing\n      });\n      console.log(\"edit button contains\", blog);\n    };\n\n    this.toggleEditing = () => {\n      this.setState({\n        editing: false\n      });\n    };\n\n    this.toggleOpenNewPage = () => {\n      this.setState({\n        openNewPage: false\n      });\n    };\n  }\n\n  // calling the api to fetch items\n  componentDidMount() {\n    console.log(\"fetching blogs from api...\");\n    this.props.getBlogs();\n  } // handle edits function\n\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container\",\n      children: [this.state.editing ? /*#__PURE__*/_jsxDEV(EditBlogs, {\n        cloneId: this.state.cloneId,\n        cloneTitle: this.state.cloneTitle,\n        cloneImageLink: this.state.cloneImageLink,\n        cloneDescription: this.state.cloneDescription,\n        toggleEditing: this.toggleEditing,\n        toggleHideOnUpdate: this.toggleHideOnUpdate,\n        toggleOpenNewPage: this.toggleOpenNewPage\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 11\n      }, this) : \"\", this.state.hideBlogsDuringUpdate || this.props.hideAllBlogs ? \"\" : /*#__PURE__*/_jsxDEV(\"div\", {\n        children: this.state.openNewPage ? /*#__PURE__*/_jsxDEV(NewPage, {\n          cloneId: this.state.cloneId,\n          cloneTitle: this.state.cloneTitle,\n          cloneImageLink: this.state.cloneImageLink,\n          cloneDescription: this.state.cloneDescription,\n          handleEdits: this.handleEdits,\n          toggleHideOnUpdate: this.toggleHideOnUpdate\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 92,\n          columnNumber: 15\n        }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"center\", {\n            children: [\" \", /*#__PURE__*/_jsxDEV(\"h3\", {\n              children: \"All Blogs\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 102,\n              columnNumber: 25\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 102,\n            columnNumber: 16\n          }, this), /*#__PURE__*/_jsxDEV(\"table\", {\n            className: \"table\",\n            children: /*#__PURE__*/_jsxDEV(\"tr\", {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 108,\n              columnNumber: 11\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 107,\n            columnNumber: 10\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 101,\n          columnNumber: 15\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nconst mapStateToProps = state => ({\n  blogs: state.blogs.blogs // from combine reducer and initial state of reducer\n\n});\n\nexport default connect(mapStateToProps, {\n  getBlogs,\n  deleteBlogs\n})(Blogs);","map":{"version":3,"sources":["/Users/marysanni/Downloads/FullStack_Blog_App_with_React_Redux_and_Django-master/frontend/src/components/Blogs.js"],"names":["React","Component","connect","getBlogs","deleteBlogs","EditBlogs","NewPage","Blogs","state","cloneId","cloneTitle","cloneImageLink","cloneDescription","editing","hideBlogsDuringUpdate","openNewPage","MAX_LENGTH","newPage","blog","setState","id","title","ImageLink","description","toggleHideOnUpdate","console","log","handleEdits","toggleEditing","toggleOpenNewPage","componentDidMount","props","render","hideAllBlogs","mapStateToProps","blogs"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport { getBlogs, deleteBlogs } from \"../actions/blogs\";\nimport EditBlogs from \"./EditBlogs\";\nimport NewPage from \"./NewPage\";\n\nexport class Blogs extends Component {\n  // managing state for update functionality\n  state = {\n    cloneId: 0,\n    cloneTitle: \"\",\n    cloneImageLink: \"\",\n    cloneDescription: \"\",\n    editing: false,\n    hideBlogsDuringUpdate: false,\n    openNewPage: false,\n    MAX_LENGTH: 250, // per blog\n  };\n\n  // new page\n  newPage = (blog) => {\n    this.setState({\n      cloneId: blog.id,\n      cloneTitle: blog.title,\n      cloneImageLink: blog.ImageLink,\n      cloneDescription: blog.description,\n      openNewPage: true,\n    });\n  };\n\n  // toggle hideBlogsDuringUpdate state\n  toggleHideOnUpdate = () => {\n    console.log(\"toggle hide on update\", this.state.hideBlogsDuringUpdate);\n    this.setState({\n      hideBlogsDuringUpdate: !this.state.hideBlogsDuringUpdate,\n    });\n  };\n\n  // calling the api to fetch items\n  componentDidMount() {\n    console.log(\"fetching blogs from api...\");\n    this.props.getBlogs();\n  }\n\n  // handle edits function\n  handleEdits = (blog) => {\n    this.setState({\n      cloneId: blog.id,\n      cloneTitle: blog.title,\n      cloneImageLink: blog.ImageLink,\n      cloneDescription: blog.description,\n      editing: !this.state.editing,\n    });\n    console.log(\"edit button contains\", blog);\n  };\n\n  // toggle form Editing\n  toggleEditing = () => {\n    this.setState({\n      editing: false,\n    });\n  };\n\n  // toggle open new page\n  toggleOpenNewPage = () => {\n    this.setState({\n      openNewPage: false,\n    });\n  };\n\n  render() {\n    return (\n      <div className=\"container\">\n        {this.state.editing ? (\n          <EditBlogs\n            cloneId={this.state.cloneId}\n            cloneTitle={this.state.cloneTitle}\n            cloneImageLink={this.state.cloneImageLink}\n            cloneDescription={this.state.cloneDescription}\n            toggleEditing={this.toggleEditing}\n            toggleHideOnUpdate={this.toggleHideOnUpdate}\n            toggleOpenNewPage={this.toggleOpenNewPage}\n          />\n        ) : (\n          \"\"\n        )}\n        {this.state.hideBlogsDuringUpdate || this.props.hideAllBlogs ? (\n          \"\"\n        ) : (\n          <div>\n            {this.state.openNewPage ? (\n              <NewPage\n                cloneId={this.state.cloneId}\n                cloneTitle={this.state.cloneTitle}\n                cloneImageLink={this.state.cloneImageLink}\n                cloneDescription={this.state.cloneDescription}\n                handleEdits={this.handleEdits}\n                toggleHideOnUpdate={this.toggleHideOnUpdate}\n              />\n            ) : (\n              <div>\n               <center> <h3>All Blogs</h3></center>\n\n\n              \n                \n         <table className =\"table\">\n          <tr>\n            \n          </tr>\n         </table>\n                  \n             \n              </div>\n            )}\n            \n          </div>\n        )}\n      \n      </div>\n     \n    );\n  }\n}\n\nconst mapStateToProps = (state) => ({\n  blogs: state.blogs.blogs, // from combine reducer and initial state of reducer\n});\n\nexport default connect(mapStateToProps, { getBlogs, deleteBlogs })(Blogs);"]},"metadata":{},"sourceType":"module"}